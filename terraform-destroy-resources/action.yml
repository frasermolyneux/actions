name: "terraform-destroy-resources"

inputs:
  terraform-folder:
    description: "The folder containing the Terraform projects"
    required: true
    default: "terraform"
    type: string
  terraform-var-file:
    description: "The var-file to to be used for the Terraform plan (tfvars/dev.tfvars, tfvars/test.tfvars, tfvars/prod.tfvars, etc.)"
    required: true
    default: "tfvars/dev.tfvars"
    type: string
  terraform-backend-file:
    description: "The backend-file to to be used for the Terraform plan (backends/dev.backend.hcl, backends/test.backend.hcl, backends/prod.backend.hcl, etc.)"
    required: false
    default: ""
    type: string
  backend-subscription-id:
    description: "The backend subscription_id if the terraform-backend-file is not being used"
    required: false
    type: string
  backend-resource-group-name:
    description: "The backend resource_group_name if the terraform-backend-file is not being used"
    required: false
    type: string
  backend-storage-account-name:
    description: "The backend storage_account_name if the terraform-backend-file is not being used"
    required: false
    type: string
  backend-container-name:
    description: "The backend container_name if the terraform-backend-file is not being used"
    required: false
    default: "tfstate"
    type: string
  backend-key:
    description: "The backend key if the terraform-backend-file is not being used"
    required: false
    default: "terraform.tfstate"
    type: string
  backend-tags:
    description: "The backend tags to be applied to the storage account"
    required: false
    type: string
    default: ""
  AZURE_CLIENT_ID: 
    description: "The azure client/application ID configured for federated access"
    required: true
    type: string
  AZURE_TENANT_ID: 
    description: "The target Azure tenant"
    required: true
    type: string
  AZURE_SUBSCRIPTION_ID: 
    description: "The target Azure subscription"
    required: true
    type: string
  resources:
    default: "['azurerm_linux_function_app.app', 'azurerm_linux_function_app.app2']"
    required: true
    type: string

runs:
  using: "composite"

  steps:
    - uses: actions/checkout@v4

    #- name: 'Az CLI Login'
    #  uses: azure/login@v2
    #  with:
    #    client-id: ${{ inputs.AZURE_CLIENT_ID }}
    #    tenant-id: ${{ inputs.AZURE_TENANT_ID }}
    #    subscription-id: ${{ inputs.AZURE_SUBSCRIPTION_ID }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_wrapper: false

    - name: Terraform Init
      shell: pwsh
      run: |
        cd ${{ inputs.terraform-folder }}
          
        if ("${{ inputs.terraform-backend-file }}" -ne "") {
          terraform init -backend-config="${{ inputs.terraform-backend-file }}" -var-file="${{ inputs.terraform-var-file }}"
        } else {
          terraform init -backend-config="subscription_id=${{ inputs.backend-subscription-id }}" -backend-config="resource_group_name=${{ inputs.backend-resource-group-name }}" -backend-config="storage_account_name=${{ inputs.backend-storage-account-name }}" -backend-config="container_name=${{ inputs.backend-container-name }}" -backend-config="key=${{ inputs.backend-key }}" -var-file="${{ inputs.terraform-var-file }}"
        }
      env:
        ARM_CLIENT_ID: ${{ inputs.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ inputs.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ inputs.AZURE_TENANT_ID }}
        ARM_USE_OIDC: true

    - name: Terraform Destroy
      shell: bash
      run: |
        cd ${{ inputs.terraform-folder }}

        resourceInput='${{ inputs.resources }}'

        # Convert the JSON array to a Bash array
        resourceArray=($(echo $resourceInput | jq -r '.[]'))

        # Loop over the array and call terraform destroy for each item
        for resource in "${resourceArray[@]}"
        do
          terraform destroy -auto-approve -target="$resource" -var-file=${{ inputs.terraform-var-file }}
        done
      env:
        ARM_CLIENT_ID: ${{ inputs.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ inputs.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ inputs.AZURE_TENANT_ID }}
        ARM_USE_OIDC: true